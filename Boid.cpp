//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include <cstdio>
#include <cstdlib>
#include "Boid.h"
#include "Bird.h"



//############################################################################
//                                                                           #
//                              Class Bird                                   #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

 const int Boid::N=100;
 const double Boid::r=10;
 const double Boid::gam1=1;
 const double Boid::gam2=1;
 const double Boid::gam3=1;

// ===========================================================================
//                                  Constructors
// ===========================================================================
Boid::Boid(void)
{
	
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
Boid::~Boid(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================

 Bird* Boid::Birds = new Bird[Boid::N];

/*
 double Boid::v1x(void)
{
	int i, j;
	int v1x;
	for (j=0 ; j<K || j!=i ; j++)
	{
		v1x += Boid._vx[j] - Boid._vx[i];
	}
	v1x = v1x / K;
	return v1x;
}
*/
//--------------------------------------------------------------------------
/*
double Boid::vxevol(void)
{
	return vx + dt*(gam1*v1x + gam2*v2x + gam3*v3x);
}
*/
//--------------------------------------------------------------------------
/*
double Boid::vyevol(void)
{
	return vy + dt*(gam1*v1y + gam2*v2y + gam3*v3y);
}
*/
//--------------------------------------------------------------------------


//--------------------------------------------------------------------------

//--------------------------------------------------------------------------

//--------------------------------------------------------------------------

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================

int Boid::_N() const
{
	return N;
}
//--------------------------------------------------------------------------
double Boid::_r() const
{
  return r;
}
//--------------------------------------------------------------------------
double Boid::_gam1() const
{
	return gam1;
}
//--------------------------------------------------------------------------
double Boid::_gam2() const
{
	return gam2;
}
//--------------------------------------------------------------------------
double Boid::_gam3() const
{
	return gam3;
}

