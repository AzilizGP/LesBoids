//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Bird.h"




//############################################################################
//                                                                           #
//                              Class Bird                                   #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================
 const int Bird::r=10;
 const int Bird::dt=1/100;
 const int Bird::K=100;
 const int Bird::gam1=1;
 const int Bird::gam2=1;
 const int Bird::gam3=1;

// ===========================================================================
//                                  Constructors
// ===========================================================================
Bird::Bird(void)
{
	x = 0;
	y = 0;
	vx = 0;
	vy = 0;
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
Bird::~Bird(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================





int Bird::xmove(void)
{
	x += vx;
}
//--------------------------------------------------------------------------
int Bird::ymove(void)
{
	y += vy;
}
//--------------------------------------------------------------------------
/*
 int Bird::v1x(void)
{
	int i, j;
	int v1x;
	for (j=0 ; j<K || j!=i ; j++)
	{
		v1x += Birds._vx[j] - Birds._vx[i];
	}
	v1x = v1x / K;
	return v1x;
}
*/
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------

//--------------------------------------------------------------------------

//--------------------------------------------------------------------------

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================

int Bird::_K() const
{
	return K;
}
//--------------------------------------------------------------------------
int Bird::_x()
{
  return x;
}
//--------------------------------------------------------------------------
int Bird::_y()
{
  return y;
}
//--------------------------------------------------------------------------
int Bird::_vx()
{
  return vx;
}
//--------------------------------------------------------------------------
int Bird::_vy()
{
  return vy;
}
//--------------------------------------------------------------------------
int Bird::_dt() const
{
  return dt;
}
//--------------------------------------------------------------------------
int Bird::_r() const
{
  return r;
}
//--------------------------------------------------------------------------
int Bird::_gam1() const
{
	return gam1;
}
//--------------------------------------------------------------------------
int Bird::_gam2() const
{
	return gam2;
}
//--------------------------------------------------------------------------
int Bird::_gam3() const
{
	return gam3;
}

